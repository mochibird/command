#対話形式でcomposer.jsonを作成する
composer init

#新しいライブラリを追加する
composer require <ライブラリ名>

#composer.jsonもしくはcomposer.lockに従ってライブラリをインストールする - チーム開発時に使用。共通のバージョンのライブラリを使うことができる
composer install

#ライブラリを取り除く
composer remove <ライブラリ名>


###composer.jsonをつくる
1,GithubでPHP envと検索する

2,docker-compose exec app composer init

3,Enterを押していく。　Authorのところでnをおす Do you confirm generation [yes]?でyes

4,phpdotenvをチェックし docker-compose exec app composer require vlucas/phpdotenv のコマンドを実行  ⬅️composer.jsonをアップデートし、ライブラリがインストールされる　PHP .envの中で使用するライブラリ

5,phpdotenvをチェックし、(動画内では)srcの直下に.envファイルを作り、.envファイル内で環境変数を指定する
例、
DB_HOST="db"
DB_USERNAME="book_log"
DB_PASSWORD="pass"
DB_DATABASE="book_log"

6,phpdotenvをチェックし、
$dotenv = Dotenv\Dotenv::createImmutable(__DIR__);
$dotenv->load();
を環境変数を設定したいファイルにコピペして貼る

7,Composerの公式マニュアルにあるように require __DIR__ . '/vendor/autoload.php';を最初にロードしておかないといけないのでを環境変数を設定したいファイルの一番上にコピペして貼る
---例
 require __DIR__ . '/vendor/autoload.php';　←読み込み先の指定に注意。指定しているファイルから見たvendor/autoload.phpの位置を指定　
動画だと　
require __DIR__ . '/../vendor/autoload.php';としていた
$dotenv = Dotenv\Dotenv::createImmutable(__DIR__);←.envファイルの読み込み先にも注意。指定しているファイルから見た.envファイルの位置を指定しなければならない
動画だと　
$dotenv = Dotenv\Dotenv::createImmutable(__DIR__ . '/..');としていた
$dotenv->load();

★動画内での結論
require __DIR__ . '/../vendor/autoload.php';
$dotenv = Dotenv\Dotenv::createImmutable(__DIR__ . '/..');
$dotenv->load();

8,docker-compose exec app php (環境変数を使いたいファイルの指定)

9, $???? = getenv(指定した環境変数); で使っていける
