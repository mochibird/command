#データベースの文字コードを確認する
show variables like 'character%';
#データベースの文字コードを日本語に変更
set character_set_database=utf8;
set character_set_server=utf8;
set character_set_client=utf8;
set character_set_results=utf8;
set character_set_connection=utf8;

alter table （テーブル名） convert to character set utf8;

cd Desktop/でデスクトップにディレクトリを作れるようにできる = ディレクトリの今いる位置を変えられる。移動できるということ。

mkdir ファイル名でディレクトリを作成

cd ~ ホームディレクトリに移動

新規タグの作成：command + t

タブの移動：command + → or ←

タブを閉じる：command + w

タブの左右分割：commnad + d

タブの上下分割：commnad + shift + d

分割したタブの移動：commnad + [ or ]

検索：command + f

検索にHitした文字をたどる：Command + G（Command + Shift + G）

検索にHitした単語から選択範囲を広げる：tab（Shift + Tab）

touch test.php test.phpというファイルを作成.  docker/test.phpでディレクトリに直接も可

mv test.rb 

rm test.php  test.php ファイルを削除

code 　vscodeを開く　　.を後につけると現在いるディレクトリから開くことができる .ではなくファイル名の指定のほうがいいかもしれない

ls 自分が今いるディレクトリの中の内容が確認できる

pwd 自分が今いるディレクトリが確認できる

echo 'Hello' > ファイル名　 ファイルに書き込む

cat ファイル名　ファイルの中身を確認

git --version gitがインストールされているか確認


# ユーザー名を設定
$ git config --global user.name "github user name"

# メールアドレスを設定
$ git config --global user.email github@example.com

# Git で使用するエディタに Visual Studio Code を指定
$ git config --global core.editor 'code --wait'

# マージする時にファストフォワードされないようにする
$ git config --global merge.ff false

# プルの挙動をリベース型にする
$ git config --global pull.rebase merges

# 設定を確認する
$ git config --list

# githubのリポジトリのクローンを持って来れる
git clone https://github.com/dokugaku-engineer/server-side.git

#今いるディレクトリのpart2をDesktopへコピーしてペースト
cp -r part2  ~/Desktop

#立ち上がっているPHPコンテナのバージョンを表示する
docker-compose exec app php -v
